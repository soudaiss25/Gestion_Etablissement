pipeline {
    agent any

    tools {
        nodejs "nodeJs"
         dockerTool "docker"
    }
  

    environment {
        DOCKER_IMAGE = "gestion-etablissement"
        GIT_REPO = "https://github.com/soudaiss25/gestion_etablissement.git"
    }

    stages {
         
        stage('Install dependencies') {
             steps {
                 sh 'node -v'
                 sh 'python3 --version'
                 sh 'pip3 --version'
             }
         }
   

        stage('Checkout') {
            steps {
                git branch: 'master', url: "${GIT_REPO}"
            }
        }
              stage('SonarQube Analysis') {
    steps {
        script {
                        withSonarQubeEnv('sonar') {
    sh '''
        sonar-scanner \
        -Dsonar.projectBaseDir=$WORKSPACE \
        -Dsonar.login=squ_5341055fa9b66b94bb732d572552d2f53bbcefb
    '''
}
        }
    }
  }
        

        stage('Build Frontend') {
            steps {
                dir('frontend') {
                    sh 'npm install'
                    sh 'npm run build'
                }
            }
        }

        stage('Install Dependencies - Django') {
            steps {
                sh '''
                    python3 -m venv venv
                    . venv/bin/activate
                    pip install -r requirements.txt
                '''
            }
        }

        stage('Run Django') {
            steps {
                sh '''
                    #!/bin/bash
                    . venv/bin/activate
                    python3 backend/manage.py runserver 0.0.0.0:8000 &
                '''
            }
        }

        stage('Test Backend') {
            steps {
                sh '''
                    #!/bin/bash
                    . venv/bin/activate
                    python3 backend/manage.py test
                '''
            }
        }

        stage('Docker Build & Push') {
       
    steps {
        script {
            
            sh '''
                 docker  build -t ${DOCKER_IMAGE}_frontend -f frontend.dockerfile .
                echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                docker push ${DOCKER_IMAGE}_frontend
            '''
            
            
            sh '''
                docker build -t ${DOCKER_IMAGE}_backend -f backend.dockerfile .
                echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                docker push ${DOCKER_IMAGE}_backend
            '''
        }
    }
            }

        stage('Deploy') {
            steps {
                sh '''
                    docker stop gestion-etablissement || true
                    docker rm gestion-etablissement || true
                    docker run -d --name gestion-etablissement -p 8080:8080 ${DOCKER_IMAGE}:latest
                '''
            }
        }
    }
}
